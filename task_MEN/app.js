/*
* App generated by yeoman generator + express-generator (basic, jade, less)
*/
var express = require('express');
var path = require('path');
var favicon = require('serve-favicon');
var logger = require('morgan');
var cookieParser = require('cookie-parser');
var bodyParser = require('body-parser');

var app = express();

// view engine setup                             // Using of Jade template lang
app.set('views', path.join(__dirname, 'views')); // define templates dir
app.set('view engine', 'jade');                  // define template language

// app.use(favicon(__dirname + '/public/img/favicon.ico'));
app.use(logger('dev'));
app.use(bodyParser.json());
app.use(bodyParser.urlencoded({
  extended: true
}));
app.use(cookieParser());
app.use(express.static(path.join(__dirname, 'public')));

/*******************************************************************************
* Connect to DB, and load models
* Connection to DB should be before any kind using or (even) declaration of 
*   any using DB and models
* ./config/database.js - create connection to DB and declare all models
* 
* *****************************************************************************/
require("./config/database");

/*******************************************************************************
*
* Router Goes HERE
*
* *****************************************************************************/
var routes = require('./routes/todos'); // load routes for "/" requests, 
                                        // declare to use TodoModels
app.use('/', routes);                   // load our route's callbacks to Express

/// catch 404 and forward to error handler
app.use(function(req, res, next) {
    var err = new Error('Not Found');
    err.status = 404;
    next(err);
});

/// error handlers

// development error handler
// will print stacktrace
if (app.get('env') === 'development') {
    app.use(function(err, req, res, next) {
        res.status(err.status || 500);
        res.render('error', {
            message: err.message,
            error: err,
            title: 'error'
        });
    });
}

// production error handler
// no stacktraces leaked to user
app.use(function(err, req, res, next) {
    res.status(err.status || 500);
    res.render('error', {
        message: err.message,
        error: {},
        title: 'error'
    });
});


module.exports = app;
